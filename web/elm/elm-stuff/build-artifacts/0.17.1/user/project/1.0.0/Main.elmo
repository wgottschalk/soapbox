var _user$project$Main$subscriptions = function (model) {
	return _elm_lang$core$Platform_Sub$none;
};
var _user$project$Main$card = function (cardInfo) {
	return A2(
		_elm_lang$html$Html$div,
		_elm_lang$core$Native_List.fromArray(
			[
				_elm_lang$html$Html_Attributes$class('card')
			]),
		_elm_lang$core$Native_List.fromArray(
			[
				A2(
				_elm_lang$html$Html$img,
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html_Attributes$height(277),
						_elm_lang$html$Html_Attributes$width(185),
						_elm_lang$html$Html_Attributes$src(cardInfo.imgUrl)
					]),
				_elm_lang$core$Native_List.fromArray(
					[])),
				A2(
				_elm_lang$html$Html$h4,
				_elm_lang$core$Native_List.fromArray(
					[]),
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html$text(cardInfo.title)
					])),
				A2(
				_elm_lang$html$Html$br,
				_elm_lang$core$Native_List.fromArray(
					[]),
				_elm_lang$core$Native_List.fromArray(
					[])),
				A2(
				_elm_lang$html$Html$p,
				_elm_lang$core$Native_List.fromArray(
					[]),
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html$text(cardInfo.description)
					]))
			]));
};
var _user$project$Main$update = F2(
	function (message, model) {
		var _p0 = message;
		switch (_p0.ctor) {
			case 'NowPlaying':
				return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
			case 'ComingSoon':
				return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
			default:
				return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
		}
	});
var _user$project$Main$Card = F3(
	function (a, b, c) {
		return {title: a, description: b, imgUrl: c};
	});
var _user$project$Main$Model = function (a) {
	return {cards: a};
};
var _user$project$Main$init = {
	ctor: '_Tuple2',
	_0: _user$project$Main$Model(
		_elm_lang$core$Native_List.fromArray(
			[
				A3(_user$project$Main$Card, 'Movie 1', 'description One', 'https://image.tmdb.org/t/p/w300_and_h450_bestv2/6FxOPJ9Ysilpq0IgkrMJ7PubFhq.jpg'),
				A3(_user$project$Main$Card, 'Movie 2', 'description Two', '')
			])),
	_1: _elm_lang$core$Platform_Cmd$none
};
var _user$project$Main$ShowFriends = {ctor: 'ShowFriends'};
var _user$project$Main$ComingSoon = {ctor: 'ComingSoon'};
var _user$project$Main$NowPlaying = {ctor: 'NowPlaying'};
var _user$project$Main$navbar = A2(
	_elm_lang$html$Html$div,
	_elm_lang$core$Native_List.fromArray(
		[
			_elm_lang$html$Html_Attributes$class('navbar')
		]),
	_elm_lang$core$Native_List.fromArray(
		[
			A2(
			_elm_lang$html$Html$ul,
			_elm_lang$core$Native_List.fromArray(
				[
					_elm_lang$html$Html_Attributes$class('menu-items')
				]),
			_elm_lang$core$Native_List.fromArray(
				[
					A2(
					_elm_lang$html$Html$li,
					_elm_lang$core$Native_List.fromArray(
						[
							_elm_lang$html$Html_Events$onClick(_user$project$Main$NowPlaying)
						]),
					_elm_lang$core$Native_List.fromArray(
						[
							_elm_lang$html$Html$text('Now Playing')
						])),
					A2(
					_elm_lang$html$Html$li,
					_elm_lang$core$Native_List.fromArray(
						[
							_elm_lang$html$Html_Events$onClick(_user$project$Main$ComingSoon)
						]),
					_elm_lang$core$Native_List.fromArray(
						[
							_elm_lang$html$Html$text('Coming Soon')
						])),
					A2(
					_elm_lang$html$Html$li,
					_elm_lang$core$Native_List.fromArray(
						[
							_elm_lang$html$Html_Events$onClick(_user$project$Main$ShowFriends)
						]),
					_elm_lang$core$Native_List.fromArray(
						[
							_elm_lang$html$Html$text('Friends')
						]))
				]))
		]));
var _user$project$Main$view = function (model) {
	var cards = A2(
		_elm_lang$core$List$map,
		function (cardData) {
			return _user$project$Main$card(cardData);
		},
		model.cards);
	return A2(
		_elm_lang$html$Html$div,
		_elm_lang$core$Native_List.fromArray(
			[]),
		_elm_lang$core$Native_List.fromArray(
			[
				_user$project$Main$navbar,
				A2(
				_elm_lang$html$Html$ul,
				_elm_lang$core$Native_List.fromArray(
					[]),
				cards)
			]));
};
var _user$project$Main$main = {
	main: _elm_lang$html$Html_App$program(
		{view: _user$project$Main$view, init: _user$project$Main$init, update: _user$project$Main$update, subscriptions: _user$project$Main$subscriptions})
};
